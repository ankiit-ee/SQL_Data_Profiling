Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537         user_id as foreign key
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:

	SELECT id a, name b, yelping_since c, review_count d, useful e, funny f, cool g, fans h, average_stars i, compliment_hot j, compliment_more k, compliment_profile l, compliment_cute m, compliment_list n, compliment_note o, compliment_plain p, compliment_cool q, compliment_funny r, compliment_writer s, compliment_photos t
	FROM user 
	WHERE a IS NULL OR b IS NULL OR c IS NULL OR d IS NULL OR e IS NULL OR f IS NULL OR g IS NULL OR h IS NULL OR i IS NULL OR j IS NULL OR k IS NULL OR l IS NULL OR m IS NULL OR n IS NULL OR o IS NULL OR p IS NULL OR q IS NULL OR r IS NULL OR s IS NULL OR t IS NULL

	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT SUM(review_count) AS total_reviews, city, stars
	FROM business
	GROUP BY city
	ORDER BY total_reviews DESC
	
	
	Copy and Paste the Result Below:
					+---------------+-----------------+-------+
					| total_reviews | city            | stars |
					+---------------+-----------------+-------+
					|         82854 | Las Vegas       |   4.0 |
					|         34503 | Phoenix         |   2.5 |
					|         24113 | Toronto         |   3.5 |
					|         20614 | Scottsdale      |   2.0 |
					|         12523 | Charlotte       |   4.5 |
					|         10871 | Henderson       |   3.5 |
					|         10504 | Tempe           |   2.0 |
					|          9798 | Pittsburgh      |   4.0 |
					|          9448 | Montréal        |   4.5 |
					|          8112 | Chandler        |   3.0 |
					|          6875 | Mesa            |   2.5 |
					|          6380 | Gilbert         |   5.0 |
					|          5593 | Cleveland       |   3.0 |
					|          5265 | Madison         |   4.0 |
					|          4406 | Glendale        |   3.0 |
					|          3814 | Mississauga     |   2.5 |
					|          2792 | Edinburgh       |   3.5 |
					|          2624 | Peoria          |   3.0 |
					|          2438 | North Las Vegas |   2.5 |
					|          2352 | Markham         |   3.5 |
					|          2029 | Champaign       |   3.0 |
					|          1849 | Stuttgart       |   4.0 |
					|          1520 | Surprise        |   4.0 |
					|          1465 | Lakewood        |   4.0 |
					|          1155 | Goodyear        |   4.5 |
					+---------------+-----------------+-------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
		SELECT stars,
		count(stars) count
		FROM business
		WHERE city = "Avon"
		GROUP BY stars
		Order BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
				+-------+-------+
				| stars | count |
				+-------+-------+
				|   1.5 |     1 |
				|   2.5 |     2 |
				|   3.5 |     3 |
				|   4.0 |     2 |
				|   4.5 |     1 |
				|   5.0 |     1 |
				+-------+-------+
			


ii. Beachwood

SQL code used to arrive at answer:
		SELECT stars,
		count(stars) count
		FROM business
		WHERE city = "Beachwood"
		GROUP BY stars
		Order BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

			+-------+-------+
			| stars | count |
			+-------+-------+
			|   2.0 |     1 |
			|   2.5 |     1 |
			|   3.0 |     2 |
			|   3.5 |     2 |
			|   4.0 |     1 |
			|   4.5 |     2 |
			|   5.0 |     5 |
			+-------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT review_count , name
	FROM user
	ORDER BY review_count DESC
	LIMIT 3
	
		
	Copy and Paste the Result Below:
			+--------------+--------+
			| review_count | name   |
			+--------------+--------+
			|         2000 | Gerald |
			|         1629 | Sara   |
			|         1339 | Yuri   |
			+--------------+--------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
					+---------------+-----------+
					| total_reviews | name      |
					+---------------+-----------+
					|          2397 | Nicole    |
					|          2253 | Sara      |
					|          2034 | Gerald    |
					|          2021 | Lisa      |
					|          1945 | Mark      |
					|          1862 | Jennifer  |
					|          1744 | Jen       |
					|          1737 | Michelle  |
					|          1678 | Melissa   |
					|          1639 | William   |
					+---------------+-----------+

					+------------+-----------+
					| total_fans | name      |
					+------------+-----------+
					|        519 | Amy       |
					|        498 | Mimi      |
					|        311 | Harald    |
					|        256 | Gerald    |
					|        207 | Lisa      |
					|        200 | Nicole    |
					|        187 | Christine |
					|        156 | Mark      |
					|        148 | Jen       |
					|        148 | Linda     |
					+------------+-----------+

			I have considered 10 rows each for the table with total_reviews and total_fans.
			As we can see from the table, number of fans have "no relation" with number of reviews.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More reviews with word "love".  // Love => 1780 reviews    and     Hate => 232 reviews

	
	SQL code used to arrive at answer:

	SELECT review.id,            -- 232 reviews
	text
	FROM review
	WHERE text LIKE '%hate%'

	SELECT review.id,             -- 1780 reviews
	text
	FROM review
	WHERE text LIKE '%love%'

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

		SELECT fans, name
		FROM user
		ORDER BY fans DESC
		LIMIT 10

	
	Copy and Paste the Result Below:

					+------+-----------+
					| fans | name      |
					+------+-----------+
					|  503 | Amy       |
					|  497 | Mimi      |
					|  311 | Harald    |
					|  253 | Gerald    |
					|  173 | Christine |
					|  159 | Lisa      |
					|  133 | Cat       |
					|  126 | William   |
					|  124 | Fran      |
					|  120 | Lissa     |
					+------+-----------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

--I have picked "Las Vegas" as city and "Restaurants" as category.
Let (4-5 stars) group be Group A and (2-3 stars) group be Group B.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	Yes the two groups have different distribution of hours.
	For the A group, the distribution is on average 10 to 21 hours.
	And for the B group, the distribution is on average 11 to 0 hours and more on late night side.


ii. Do the two groups you chose to analyze have a different number of reviews?

	Yes the two groups have different number of reviews.
	For the A group, the average number of reviews are 450 (roughly) i.e more reviews.
	And for the B group, the average number of reviews are 120 (roughly).

         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	
	For the group B , the neighbourhood data is null but group B suggests that "Summerlin" and  "Chinatown" have restaurants with high ratings.


SQL code used for analysis:

				SELECT 
				business.id
				,business.name
				,business.neighborhood
				,business.address
				,business.postal_code
				,business.city
				,business.state
				,business.stars
				,business.review_count
				,business.is_open
				,category.category
				,hours.hours
				FROM business
				INNER JOIN
				    category ON category.business_id = business.id
				INNER JOIN
				    hours ON hours.business_id = business.id
				WHERE business.city = "Las Vegas" 
				      AND category.category = "Restaurants"
				      AND hours.hours LIKE 'Monday%'
				      AND business.stars IN (2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0)

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Review stars. Open shops have an average review of 3.68 and closed ones hava an average review of 3.52.
								And the ratio of good ratings to bad ratings is high for open businesses than closed  ones.

         
         
ii. Difference 2: Review "Useful". The "useful" review between open and closed businesses is huge compared to other reviews like "cool" and
						           "funny".

			+---------+--------------------+-------------------+------------------+
			| is_open | SUM(review.useful) | SUM(review.funny) | SUM(review.cool) |
			+---------+--------------------+-------------------+------------------+
			|       0 |                 69 |                15 |               30 |
			|       1 |                484 |               152 |              219 |
			+---------+--------------------+-------------------+------------------+
         
         
         
SQL code used for analysis:

						SELECT is_open,   
						COUNT(stars)
						--,AVG(stars)	--uncomment when want to know about the average stars but then comment both where statements
						FROM business
						WHERE stars IN (2.0, 2.5, 3.0)   -- bad rating
						--WHERE stars IN (4.0, 4.5, 5.0) -- good rating    --uncomment this then comment above where statement
						GROUP BY is_open



						SELECT 
						business.is_open
						,SUM(review.useful)
						,SUM(review.funny)
						,SUM(review.cool)
						FROM business
						INNER JOIN review ON review.business_id = business.id
						GROUP BY is_open



	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	I chose to do an analysis on the effect on stars and whether the businesses are still open or closed, due to various factors stated in 'ii'.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	I chose businesses' names, their location, the stars they recieved, total review_count, the number of reviews said the business was useful, and three sentiments hate, love and normal.
	These variables are good for predicting whether the business is closed or open or their fate in future.
	I have prepared the sentiment data to also find whether the extreme reviews have more effect than normal ones.
	Review count is given to normalize columns made from reviews like useful_revies etc.
	And the last column representing whether the business is open or closed.                       
                  
iii. Output of your finished dataset:

	+----------------------------------+--------------+-------+--------------+------+------+--------+----------------+---------+
	| name                             | city         | stars | review_count | hate | love | normal | useful_reviews | is_open |
	+----------------------------------+--------------+-------+--------------+------+------+--------+----------------+---------+
	| 4E Kennels                       | Las Vegas    |   5.0 |           24 |    0 |    1 |      0 |              2 |       1 |
	| 5 & Diner                        | Chandler     |   3.0 |           13 |    0 |    0 |      1 |              1 |       0 |
	| 808 Sushi                        | Las Vegas    |   3.5 |          435 |    1 |    2 |      1 |              4 |       1 |
	| 99 Ranch Market                  | Las Vegas    |   3.0 |          136 |    1 |    1 |      0 |              4 |       1 |
	| A Panda Buffet                   | South Euclid |   3.5 |           11 |    0 |    1 |      0 |              0 |       0 |
	| AG Jeans                         | Las Vegas    |   4.5 |            3 |    0 |    0 |      1 |              3 |       1 |
	| ARA Of Madison                   | Madison      |   3.0 |            7 |    1 |    0 |      0 |              0 |       1 |
	| AT&T                             | Las Vegas    |   3.5 |           23 |    0 |    0 |      1 |              1 |       1 |
	| Abuelo's                         | Chandler     |   3.5 |          340 |    0 |    1 |      0 |              0 |       1 |
	| Afton Tavern                     | Concord      |   3.5 |           80 |    0 |    1 |      0 |              0 |       1 |
	| Ai Sushi                         | Markham      |   3.5 |           78 |    0 |    0 |      1 |              0 |       1 |
	| Akahana Asian Bistro             | Charlotte    |   3.0 |          194 |    0 |    1 |      0 |              1 |       1 |
	| Aki Da Japanese Seafood House    | Toronto      |   2.0 |           21 |    0 |    1 |      0 |              0 |       1 |
	| Alamo Rent A Car                 | Mesa         |   4.0 |           18 |    0 |    0 |      1 |              0 |       1 |
	| Albertsons                       | Las Vegas    |   3.5 |           40 |    1 |    0 |      0 |              7 |       1 |
	| Alfred Angelo Bridal             | Henderson    |   4.0 |           58 |    0 |    1 |      0 |              0 |       1 |
	| All In One Home Repairs          | Scottsdale   |   3.5 |            3 |    0 |    0 |      1 |              0 |       1 |
	| Amalfi Ristorante Italiano       | Chandler     |   4.0 |          129 |    0 |    1 |      0 |              1 |       1 |
	| America's Taco Shop              | Chandler     |   3.5 |          111 |    1 |    0 |      1 |              2 |       1 |
	| Angelique's Family Restaurant    | Ajax         |   4.5 |           73 |    0 |    1 |      0 |              1 |       1 |
	| Angelo's Pizza                   | Lakewood     |   4.0 |          377 |    0 |    1 |      0 |              0 |       1 |
	| Anyplace Auto Repair             | Phoenix      |   4.5 |           92 |    0 |    1 |      0 |              0 |       1 |
	| AquaKnox                         | Las Vegas    |   4.0 |          423 |    0 |    2 |      1 |              2 |       1 |
	| Arabesque Dance & Fitness Studio | Las Vegas    |   4.5 |           12 |    0 |    0 |      1 |              0 |       1 |
	| Arbor Care Tree Service          | Tempe        |   5.0 |           91 |    0 |    1 |      0 |              9 |       1 |
	+----------------------------------+--------------+-------+--------------+------+------+--------+----------------+---------+
         
         
iv. Provide the SQL code you used to create your final dataset:


		SELECT business.name,
		business.city,
		business.stars,
		business.review_count,
		SUM(
		CASE 
		  WHEN 
		      review.text LIKE '%hate%' 
		      OR review.text LIKE '%bad%'
		      OR review.text LIKE '%rude%'
		      OR review.text LIKE '%mistake%'
		  THEN 1
		  ELSE 0
		END
		) hate,
		SUM(
		CASE 
		  WHEN 
		      review.text LIKE '%love%' 
		      OR review.text LIKE '%good%'
		      OR review.text LIKE '%excellent%'
		      OR review.text LIKE '%pleasant%'
		      OR review.text LIKE '%professional%'
		      OR review.text LIKE '%amazing%'
		      OR review.text LIKE '%authentic%'
		      OR review.text LIKE '%great%'
		      OR review.text LIKE '%delicious%'
		  THEN 1
		  ELSE 0
		END
		) love,
		SUM(
		CASE 
		  WHEN
		      review.text NOT LIKE '%hate%' 
		      AND review.text NOT LIKE '%bad%'
		      AND review.text NOT LIKE '%rude%'
		      AND review.text NOT LIKE '%mistake%'
		      AND review.text NOT LIKE '%love%' 
		      AND review.text NOT LIKE '%good%'
		      AND review.text NOT LIKE '%excellent%'
		      AND review.text NOT LIKE '%pleasant%'
		      AND review.text NOT LIKE '%professional%'
		      AND review.text NOT LIKE '%amazing%'
		      AND review.text NOT LIKE '%authentic%'
		      AND review.text NOT LIKE '%great%'
		      AND review.text NOT LIKE '%delicious%'
		  THEN 1
		  ELSE 0
		END
		) normal,
		SUM(review.useful) useful_reviews,
		business.is_open
		FROM business
		INNER JOIN review on business.id = review.business_id
		GROUP BY business.name

